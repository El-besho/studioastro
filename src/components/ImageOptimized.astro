---
// Optimized Image Component with lazy loading and WebP support
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  class?: string;
  sizes?: string;
  priority?: boolean;
}

const { 
  src, 
  alt, 
  width, 
  height, 
  loading = 'lazy', 
  class: className = '',
  sizes,
  priority = false
} = Astro.props;

// Generate WebP version path
const webpSrc = src.replace(/\.(jpg|jpeg|png)$/i, '.webp');
const hasDimensions = width && height;
---

<picture>
  <source 
    type="image/webp" 
    srcset={webpSrc}
    {sizes && { sizes }}
  />
  <img
    src={src}
    alt={alt}
    loading={priority ? 'eager' : loading}
    decoding={priority ? 'sync' : 'async'}
    class={`${className} ${!hasDimensions ? 'w-full h-auto' : ''}`}
    {width && { width }}
    {height && { height }}
    {sizes && { sizes }}
    fetchpriority={priority ? 'high' : 'auto'}
  />
</picture>

<style>
  img {
    max-width: 100%;
    height: auto;
    display: block;
  }
</style>